classtype: RuleSet
id: FormatUarchRuleSet

# Primitive MetadataParser validation rules

validation_rule_set:
  classtype: ValidationRuleSet
  id: PrimitiveMetadataParserValidationRuleSet
  validation_rules:

  # - Supported-instantiation validation rules

  - classtype: ValidationRule
    conditionally_evaluated_expression:
      classtype: FunctionReference
      id: assertion
      value: assertPrimitiveMetadataParserAttributesAreSupported
    id: AssertPrimitiveMetadataParserSupportedInstantiation
    predicate:
      classtype: FunctionReference
      id: predicate
      value: predicateIsPrimitiveMetadataParser

# Component FormatUarch validation rules

validation_rule_set:
  classtype: ValidationRuleSet
  id: ComponentFormatUarchValidationRuleSet
  validation_rules:

  # - Supported-instantiation validation rules

  - classtype: ValidationRule
    conditionally_evaluated_expression:
      classtype: FunctionReference
      id: assertion
      value: assertComponentFormatUarchAttributesAreSupported
    id: AssertComponentFormatUarchSupportedInstantiation
    predicate:
      classtype: FunctionReference
      id: predicate
      value: predicateIsComponentFormatUarch

# Format uarch rewrite rules

rewrite_rule_set:
  classtype: RewriteRuleSet
  id: FormatUarchRewriteRuleSet
  rewrite_rules:

  # - Format SAF to Format uarch rewrite rule

  - id: ConcretizeArchitectureFormatSAFsToFormatUarches
    classtype: RewriteRule
    predicate:
      id: predicate
      classtype: FunctionReference
      value: predicateIsArchitectureHasFormatSAF
    conditionally_evaluated_expression:
      id: concretization
      classtype: FunctionReference
      value: concretizeArchitectureFormatSAFsToFormatUarches


  # - Topological hole rewrite

  - classtype: RewriteRule
    conditionally_evaluated_expression:
      classtype: FunctionReference
      id: transform
      value: transformTopologicalHoleToPerRankMdParserTopology
    id: TransformTopologicalHoleToPerRankMdParserTopology
    predicate:
      classtype: FunctionReference
      id: predicate
      value: predicateIsComponentIsFormatUarchHasTopologicalHole

  # - Unknown attribute type from known interface type

  #- classtype: RewriteRule
  #  conditionally_evaluated_expression:
  #    classtype: FunctionReference
  #    id: transform
  #    value: transformUnknownAttributeTypeFromInterfaceType
  #  id: TransformUnknownAttributeTypeFromInterfaceType
  #  predicate:
  #    classtype: FunctionReference
  #    id: predicate
  #    value: predicateIsPrimitiveMetadataParserHasUnknownAttributeTypeAndKnownInterfaceType 