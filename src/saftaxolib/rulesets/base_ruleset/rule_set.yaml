classtype: RuleSet
id: TopologyRuleSet

# Topology validation rules

validation_rule_set:
  classtype: ValidationRuleSet
  id: TopologyValidationRuleSet
  validation_rules:

  # - NetHasConsistentPortNetType: all ports connected by a Net should have a consistent NetType
  - classtype: ValidationRule
    conditionally_evaluated_expression:
      classtype: FunctionReference
      id: assertion
      value: assertHasConsistentPortNetTypes
    id: AssertNetHasConsistentPortNetType
    predicate:
      classtype: FunctionReference
      id: predicate
      value: predicateHasConsistentPortNetTypes

  # - NetHasConsistentPortFormatType: all ports connected by a Net should have a consistent FormatType
  - classtype: ValidationRule
    conditionally_evaluated_expression:
      classtype: FunctionReference
      id: assertion
      value: assertNetHasConsistentPortFormatType
    id: AssertNetHasConsistentPortFormatType
    predicate:
      classtype: FunctionReference
      id: predicate
      value: predicateNetHasConsistentPortFormatType

# Format uarch rewrite rules

rewrite_rule_set:
  classtype: RewriteRuleSet
  id: TopologicalRewriteRuleSet
  rewrite_rules:

  # - Infer unknown port types on nets where some port types are known

  #- classtype: RewriteRule
  #  conditionally_evaluated_expression:
  #    classtype: FunctionReference
  #    id: transform
  #    value: transformUnknownPortTypesOnNetsWithKnownTypesToKnownType
  #  id: TransformUnknownPortTypesOnNetsWithKnownTypesToKnownType
  #  predicate:
  #    classtype: FunctionReference
  #    id: predicate
  #    value: predicateUnknownPortTypesOnNetsWithKnownTypesToKnownType

  # - Infer unknown child port types on nets where some port types are known
  - classtype: RewriteRule
    conditionally_evaluated_expression:
      classtype: FunctionReference
      id: transform
      value: transformUnknownChildComponentPortTypesOnNetsWithKnownTypesToKnownType
    id: TransformUnknownChildComponentPortTypesOnNetsWithKnownTypesToKnownType
    predicate:
      classtype: FunctionReference
      id: predicate
      value: predicateUnknownChildComponentPortTypesOnNetsWithKnownTypesToKnownType  

  - classtype: RewriteRule
    conditionally_evaluated_expression:
      classtype: FunctionReference
      id: transform
      value: transformSetUnknownAttributeFromKnownInterfaceTypeReferencingAttribute
    id: TransformSetUnknownAttributeFromKnownInterfaceTypeReferencingAttribute
    predicate:
      classtype: FunctionReference
      id: predicate
      value: predicateIsPrimitiveOrComponentHasUnknownAttributeTypeAndKnownInterfaceTypeReferencingAttribute  

  - classtype: RewriteRule
    conditionally_evaluated_expression:
      classtype: FunctionReference
      id: transform
      value: transformSetUnknownInterfaceTypeFromReferencedKnownAttribute
    id: TransformSetUnknownInterfaceTypeFromReferencedKnownAttribute
    predicate:
      classtype: FunctionReference
      id: predicate
      value: predicateIsPrimitiveOrComponentHasUnknownInterfaceTypeReferencingKnownAttribute

# Topology completion rules
completion_rule_set:
  classtype: CompletionRuleSet
  id: TopologyCompletionRuleSet
  completion_rules:

  # - CheckComponentHasNoTopologicalHoles: the component should contain no topological holes
  - classtype: CompletionRule
    conditionally_evaluated_expression:
      classtype: FunctionReference
      id: criterion
      value: checkComponentHasNoTopologicalHoles
    id: CheckComponentHasNoTopologicalHoles
    predicate:
      classtype: FunctionReference
      id: predicate
      value: predicateComponentHasNoTopologicalHoles

  # - CheckComponentHasNoUnknownInterfaceTypes: the component's interface ports should all have known types
  - classtype: CompletionRule
    conditionally_evaluated_expression:
      classtype: FunctionReference
      id: criterion
      value: checkComponentHasNoUnknownInterfaceTypes
    id: CheckComponentHasNoUnknownInterfaceTypes
    predicate:
      classtype: FunctionReference
      id: predicate
      value: predicateComponentHasNoUnknownInterfaceTypes

  # - CheckComponentHasNoUnknownAttributes: the component's attributes should all have known types
  - classtype: CompletionRule
    conditionally_evaluated_expression:
      classtype: FunctionReference
      id: criterion
      value: checkComponentHasNoUnknownAttributeTypes
    id: CheckComponentHasNoUnknownAttributeTypes
    predicate:
      classtype: FunctionReference
      id: predicate
      value: predicateComponentHasNoUnknownAttributeTypes

  # - IsComponentOrArchitectureHasTopology: no topological holes in the design
  - classtype: CompletionRule
    conditionally_evaluated_expression:
      classtype: FunctionReference
      id: criterion
      value: checkIsComponentOrArchitectureHasTopology
    id: IsComponentOrArchitectureHasTopology
    predicate:
      classtype: FunctionReference
      id: predicate
      value: predicateIsComponentOrArchitectureHasTopology   
